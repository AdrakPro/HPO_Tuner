
{
    "project": {
        "name": "HPO Paper-Based Experiment",
        "seed": 1236
    },
    "environment": {
        "data_source": {
            "dataset": "CIFAR-10",
            "path": "./model_data"
        },
        "logging": {
            "log_file": "logs/experiment.log",
            "error_log_file": "logs/error.log",
            "report_directory": "reports"
        }
    },
    "checkpoint_config": {
        "interval_per_gen": 1
    },
    "parallel_config": {
        "execution": {
            "evaluation_mode": "CPU",
            "enable_parallel": true,
            "gpu_workers": 0,
            "cpu_workers": 2,
            "gpu_cpu_performance_ratio": 16,
            "dataloader_workers": {
                "per_gpu": 8,
                "per_cpu": 1
            }
        }
    },
    "neural_network_config": {
        "input_shape": [
            3,
            32,
            32
        ],
        "output_classes": 10,
        "conv_blocks": 3,
        "fixed_parameters": {
            "activation_function": "relu",
            "base_filters": 96
        },
        "hyperparameter_space": {
            "width_scale": {
                "type": "float",
                "range": [
                    1.0,
                    1.5
                ],
                "description": "Scales the number of filters in convolutional layers"
            },
            "mixup_alpha": {
                "type": "float",
                "range": [
                    0.0,
                    1.0
                ],
                "description": "Dropout intensity in the first fully connected layer"
            },
            "dropout_rate": {
                "type": "float",
                "range": [
                    0.2,
                    0.5
                ],
                "description": "Dropout intensity in the first fully connected layer"
            },
            "optimizer_schedule": {
                "type": "enum",
                "values": [
                    "SGD_COSINE",
                    "SGD_ONECYCLE",
                    "SGD_EXPONENTIAL"
                ],
                "description": "Optimizer type + Learning rate scheduler"
            },
            "base_lr": {
                "type": "float",
                "range": [
                    0.005,
                    0.1
                ],
                "scale": "log",
                "description": "Base learning rate value, log scale"
            },
            "aug_intensity": {
                "type": "enum",
                "values": [
                    "MEDIUM",
                    "STRONG"
                ],
                "description": "Level of data augmentation"
            },
            "weight_decay": {
                "type": "float",
                "range": [
                    1e-4,
                    1e-3
                ],
                "scale": "log",
                "description": "L2 regularization coefficient, log scale"
            },
            "batch_size": {
                "type": "enum",
                "values": [
                    128,
                    256
                ],
                "description": "Training batch size"
            }
        }
    },
    "nested_validation_config": {
        "enabled": true,
        "outer_k_folds": 2
    },
    "genetic_algorithm_config": {
        "genetic_operators": {
            "active": [
                "selection",
                "crossover",
                "mutation",
                "elitism"
            ],
            "selection": {
                "type": "tournament",
                "tournament_size": 4
            },
            "crossover": {
                "type": "uniform",
                "crossover_prob": 0.8
            },
            "mutation": {
                "mutation_prob_discrete": 0.15,
                "mutation_prob_categorical": 0.15,
                "mutation_sigma_continuous": 0.1,
                "mutation_prob_continuous": 0.15
            },
            "elitism_percent": 0.1
        },
        "calibration": {
            "enabled": false,
            "population_size": 48,
            "generations": 10,
            "training_epochs": 20,
            "data_subset_percentage": 1.0,
            "mutation_decay_rate": 0.98,
            "stratification_bins": 9,
            "stop_conditions": {
                "max_generations": 10,
                "early_stop_generations": 999,
                "early_stop_epochs": 6,
                "fitness_goal": 0.99,
                "time_limit_minutes": 1440
            }
        },
        "main_algorithm": {
            "population_size": 24,
            "generations": 5,
            "training_epochs": 150,
            "mutation_decay_rate": 0.98,
            "stratification_bins": 3,
            "stop_conditions": {
                "max_generations": 70,
                "early_stop_generations": 8,
                "early_stop_epochs": 20,
                "fitness_goal": 0.99,
                "time_limit_minutes": 0
            }
        }
    }
}
